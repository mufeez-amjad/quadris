#ifndef COMMAND_H
#define COMMAND_H

#include <string>

// type of command
enum class CommandType
{
	NO_TYPE = 0,
	GAME_MOVE,
	GAME_TEST,
	PROGRAM_INSTRUCTION
};

// type of game move
enum class GameMove
{
	LEFT = 0,
	RIGHT,
	DOWN,
	CLOCKWISE,
	COUNTERCLOCKWISE,
	DROP,
	DOWN,
	LEVELUP,
	LEVELDOWN,
	NORANDOM_FILE,
	RANDOM,
	SEQUENCE_FILE,
	RESTART,
	HINT,
	NOT_A_GAME_MOVE
};

// type of test command
enum class GameTest
{
	I = 0,
	J,
	L,
	S,
	Z,
	O,
	T,
	NOT_A_GAME_TEST
};

// type of program instruction
enum class ProgramInstruction
{
	QUIT = 0,
	NOT_A_PROGRAM_INSTRUCTION
};

// commands are generated by views and interpreted
// by a CommandInterpreter instance
struct Command
{
	CommandType type;
	GameMove move;
	GameTest test;
	std::string message;
};

#endif // COMMAND_H
